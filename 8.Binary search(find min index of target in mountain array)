https://leetcode.com/problems/find-in-mountain-array/
class Solution {
    public int findInMountainArray(int target, MountainArray mountainArr) {
        int peak=bigvalue(mountainArr);
        int firstvalue=order(mountainArr, target, 0, peak);
        if(firstvalue != -1)
        {
            return firstvalue;
        }
        else{
            return order(mountainArr, target, peak +1, mountainArr.length() -1);
        }
    }
    private int bigvalue(MountainArray mountainArr)
    {
        int start=0;
        int end=mountainArr.length()-1;
        while(start<end)
        {
            int mid=start+(end-start)/2;
            int bigvaluemid=mountainArr.get(mid);
            int nextmid=mountainArr.get(mid+1);
            if(bigvaluemid<nextmid)
                start=mid+1;
            else if(bigvaluemid>nextmid)
                end=mid;
        }
        return start;
    }
    private int order(MountainArray mountainArr,int target,int start,int end)
    {
        boolean asci =mountainArr.get(start)<mountainArr.get(end);

        while(start<=end)
        {
            int mid=start+(end-start)/2;
            int ordermid=mountainArr.get(mid);
            if(ordermid==target)
                return mid;
            if(asci)
            {
                if(ordermid<target)
                    start=mid+1;
                else
                    end=mid-1;
            }else
            {
                if(ordermid>target)
                    start=mid+1;
                else
                    end=mid-1;
            }
        }
        return -1;
    }
}
