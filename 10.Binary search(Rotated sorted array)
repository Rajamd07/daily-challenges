https://leetcode.com/problems/search-in-rotated-sorted-array/
class Solution {
    public int search(int[] nums, int target) {
        int pivot=pivot(nums); 
        int firstsearch=binarysearch(nums,target,0,pivot);
        if(firstsearch !=-1)
            return firstsearch;
        else
            return binarysearch(nums,target,pivot+1,nums.length -1);
    }
    int pivot(int[] nums)
    {
        int start=0;
        int end= nums.length -1;
        while(start<=end)
        {
            int mid=start+(end-start)/2;
            if(mid!=end && nums[mid]>nums[mid+1])
                return mid;
            else if(mid!=start && nums[mid]<nums[mid -1])
                return mid-1;
            if(nums[start]<nums[mid])
                start=mid+1;
            else
                end=mid-1;
        }
        return -1;
    }
    static int binarysearch(int[] nums,int target, int start, int end)
    {
		while(start<=end){
			int mid=start+(end - start)/2;
			if(nums[mid]<target)
				start=mid+1;
			else if(nums[mid]>target)
				end=mid-1;
			else
				return mid;
		}
		return -1;
	}
}
